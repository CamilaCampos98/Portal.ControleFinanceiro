@page
@model Fixos
@{
	ViewData["Title"] = "Gastos Fixos";
}
<style>
	#gridFixos th.pago-col,
	#gridFixos td.pago-col {
		display: none;
	}
</style>
<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- Bootstrap Icons -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">

<div class="main-container">
	<h2><i class="bi bi-calendar-check"></i> Gastos Fixos</h2>

	@if (!string.IsNullOrEmpty(Model.Erro))
	{
		<div class="alert alert-danger">
			@Model.Erro
		</div>
	}


	<form method="post">
		<div class="row g-3 mb-3">
			<div class="col-md-4">
				<label for="Pessoa" class="form-label">Pessoa</label>
				<input asp-for="Pessoa" id="Pessoa" class="form-control" />

			</div>
			<div class="col-md-6">
				<label for="TiposSelecionados" class="form-label">Tipos de Gastos Fixos</label>
				<select asp-for="TiposSelecionados" id="TiposSelecionados" class="form-select" multiple size="5">
					<option value="Condomínio">Condomínio</option>
					<option value="Conta de Luz">Conta de Luz</option>
					<option value="Financiamento Veículo">Financiamento Veículo</option>
					<option value="Financiamento Imóvel">Financiamento Imóvel</option>
					<option value="Empréstimo">Empréstimo</option>
					<option value="Empréstimo">Empréstimo Janio</option>
					<option value="Vivo">Vivo</option>
					<option value="Impostos">Impostos</option>
					<option value="Contabilidade">Contabilidade</option>
					<option value="Convenio">Convênio</option>
					<option value="Criare">Criare</option>
					<option value="SeguroCarro">Seguro Carro</option>
					<option value="CompraMes">Compra Mês</option>
					<option value="IPTU">IPTU</option>
				</select>
			</div>
		</div>
		<button type="submit" asp-page-handler="Gerar" class="btn btn-primary">
			<i class="bi bi-plus-circle"></i>
			Gerar
		</button>

		<button type="submit" asp-page-handler="Listar" class="btn btn-secondary">
			<i class="bi bi-list"></i>
			Listar Fixos
		</button>
	</form>

	@if (!string.IsNullOrEmpty(Model.Mensagem))
	{
		<div class="alert @(Model.Sucesso ? "alert-success" : "alert-danger") alert-dismissible fade show shadow-sm mt-3" role="alert">
			<pre class="m-0">@Model.Mensagem</pre>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	}

	@if (Model.FixosModel != null && Model.FixosModel.Any())
	{
		<form id="formExcluir" method="post" asp-page-handler="Excluir">
	<input type="hidden" name="Id" id="formExcluir_Id" />
	<input type="hidden" name="MesAno" id="formExcluir_MesAno" />
	<input type="hidden" name="Pessoa" value="@Model.Pessoa" />
		</form>

		<div class="text-end mb-2">
			<button id="btnTogglePago"
					type="button"
					class="btn btn-outline-secondary btn-sm">
				<i class="bi bi-eye-slash" id="iconTogglePago"></i> Mostrar Valor
			</button>
		</div>
		<div class="card shadow-sm mb-4">
			<form method="post" asp-page-handler="Salvar">
				<div class="card-header card-header-custom">
					<h4><i class="bi bi-table"></i> Gastos Fixos Gerados</h4>
				</div>
				
				<div class="table-responsive">
					<table class="table table-bordered table-hover align-middle" id="gridFixos">
						<thead>
							<tr>
								<th style="display:none">ID</th>
								<th>Tipo</th>
								<th>Mês/Ano</th>
								<th>Vencimento</th>
								<th class="pago-col" style="min-width: 80px;">Valor (R$)</th>
								<th style="min-width: 50px;">Pago</th>
								<th style="min-width: 30px;">Dividido</th>
								<th style="min-width: 50px;">Ações</th>
							</tr>
						</thead>
						<tbody>
							@for (int i = 0; i < Model.FixosModel.Count; i++)
							{
								<tr>
									<td style="display:none">
										@Model.FixosModel[i].Id
										<input type="hidden" name="FixosModel[@i].Id" value="@Model.FixosModel[i].Id" />
									</td>
									<td>
										@Model.FixosModel[i].Tipo
										<input type="hidden" name="FixosModel[@i].Tipo" value="@Model.FixosModel[i].Tipo" />
									</td>
									<td>
										@Model.FixosModel[i].MesAno
										<input type="hidden" name="FixosModel[@i].MesAno" value="@Model.FixosModel[i].MesAno" />
									</td>
									<td>
										@Model.FixosModel[i].Vencimento
										<input type="hidden" name="FixosModel[@i].Vencimento" value="@Model.FixosModel[i].Vencimento" />
									</td>
									<td class="pago-col">
										<input type="number" step="0.01" class="form-control"
											   name="FixosModel[@i].Valor"
											   value="@(Model.FixosModel[i].Valor)" />
									</td>
									<td>
										<input type="checkbox"
											   name="FixosModel[@i].Pago"
											   value="true"
											   @(Model.FixosModel[i].Pago == "true" ? "checked" : "") />
										<input type="hidden" name="FixosModel[@i].Pago" value="false" />
									</td>
									<td>
										<input type="checkbox"
											   name="FixosModel[@i].Dividido"
											   value="true"
											   @(Model.FixosModel[i].Dividido == "Sim" ? "checked" : "") />
										<input type="hidden" name="FixosModel[@i].Dividido" value="false" />
									</td>
									<td>
										<button type="button"
												class="btn btn-warning btn-sm btnDividir d-none"
												data-id="@Model.FixosModel[i].Id"
												data-tipo="@Model.FixosModel[i].Tipo"
												data-valor="@Model.FixosModel[i].Valor">
											<i class="bi bi-arrow-left-right"></i>
										</button>

										<!-- Formulário separado para excluir -->
										<button type="submit"
												form="formExcluir"
												class="btn btn-secondary btn-sm"
												onclick="return confirmarExcluir('@Model.FixosModel[i].Id', '@Model.FixosModel[i].MesAno', '@Model.FixosModel[i].Tipo');">
											<i class="bi bi-trash"></i>
										</button>
									</td>
								</tr>
							}
						</tbody>
					</table>
				</div>

				<div class="mt-3 text-end">
					<button type="submit" class="btn btn-success">
						<i class="bi bi-save"></i> Salvar Todos
					</button>
				</div>
			</form>
		</div>
	}
	
	<div class="modal fade" id="dividirModal" tabindex="-1" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<form method="post" asp-page-handler="DividirGastoFixo">
					<div class="modal-header">
						<h5 class="modal-title">Dividir Gasto Fixo</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal"></button>
					</div>
					<div class="modal-body">
						<input type="hidden" name="IdGasto" id="modalIdGasto" />
						<div class="mb-3">
							<label class="form-label">Dividir com:</label>
							<input type="text" class="form-control" name="DividirCom" required />
						</div>
						<div class="mb-3">
							<label class="form-label">Valor:</label>
							<input type="text" class="form-control" name="ValorDivisao" required />
						</div>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
						<button type="submit" class="btn btn-primary">
							OK
						</button>
					</div>
				</form>
			</div>
		</div>
	</div>
</div>
<div class="loading-overlay" id="loadingOverlay">
	<div>
		<div class="spinner-border text-primary" role="status"></div>
	</div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css" />
<script src="https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js"></script>

<script>

		function confirmarExcluir(id, mesAno, tipo) {
			if (confirm(`Deseja realmente excluir o fixo '${tipo}' do mês ${mesAno}?`)) {
				document.getElementById('formExcluir_Id').value = id;
				document.getElementById('formExcluir_MesAno').value = mesAno;
				return true;
			}
			return false;
		}

		document.addEventListener('DOMContentLoaded', function () {
		const btn = document.getElementById('btnTogglePago');
		const icon = document.getElementById('iconTogglePago');
		let isVisible = false;

		btn.addEventListener('click', function () {
			const ths = document.querySelectorAll('#gridFixos th.pago-col');
			const tds = document.querySelectorAll('#gridFixos td.pago-col');

			isVisible = !isVisible;

			ths.forEach(th => {
				th.style.display = isVisible ? 'table-cell' : 'none';
			});

			tds.forEach(td => {
				td.style.display = isVisible ? 'table-cell' : 'none';
			});

			if (isVisible) {
				icon.classList.remove('bi-eye-slash');
				icon.classList.add('bi-eye');
				btn.innerHTML = '<i class="bi bi-eye" id="iconTogglePago"></i> Ocultar Valor';
			} else {
				icon.classList.remove('bi-eye');
				icon.classList.add('bi-eye-slash');
				btn.innerHTML = '<i class="bi bi-eye-slash" id="iconTogglePago"></i> Mostrar Valor';
			}
		});
	});

	// Inicializa o Choices no seletor
	const tiposFixos = new Choices('#TiposSelecionados', {
		removeItemButton: true,
		shouldSort: false,
	});

		document.addEventListener('DOMContentLoaded', function () {
		const grid = document.getElementById('gridFixos');
		if (!grid) return;

		let selectedRow = null;

		grid.addEventListener('click', function (e) {
			const row = e.target.closest('tr');
			if (!row || !grid.contains(row)) return;

			// Clique no botão dividir
			if (e.target.classList.contains('btnDividir')) {
				const id = e.target.dataset.id;
				document.getElementById('modalIdGasto').value = id;

				const modal = new bootstrap.Modal(document.getElementById('dividirModal'));
				modal.show();
				return;
			}

			// Seleção da linha
			if (selectedRow) {
				selectedRow.classList.remove('table-primary');
				const btnAnterior = selectedRow.querySelector('.btnDividir');
				if (btnAnterior) btnAnterior.classList.add('d-none');
			}

			selectedRow = row;
			row.classList.add('table-primary');

			const btnAtual = row.querySelector('.btnDividir');
			if (btnAtual) btnAtual.classList.remove('d-none');
		});
	});


	document.addEventListener('DOMContentLoaded', function () {
		const overlay = document.getElementById('loadingOverlay');

		const forms = document.querySelectorAll('form');
		const buttons = document.querySelectorAll('form button[type="submit"]');

		forms.forEach(form => {
			form.addEventListener('submit', function () {
				// Ativa overlay
				overlay.style.display = 'flex';

				// Ativa loading nos botões do formulário
				const btns = form.querySelectorAll('button[type="submit"]');
				btns.forEach(btn => {
					btn.classList.add('btn-loading');
				});
			});
		});
	});

</script>